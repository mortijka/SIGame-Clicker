<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="dark">#1E1E1E</SolidColorBrush>
    <SolidColorBrush x:Key="semidark">#323232</SolidColorBrush>
    <SolidColorBrush x:Key="semisemidark">#646464</SolidColorBrush>
    <SolidColorBrush x:Key="light">#E1E1E1</SolidColorBrush>
    <SolidColorBrush x:Key="red">#C42B1C</SolidColorBrush>
    <SolidColorBrush x:Key="greenLight">#00CC99</SolidColorBrush>
    <SolidColorBrush x:Key="green">#009A74</SolidColorBrush>
    <SolidColorBrush x:Key="greenDark">#003226</SolidColorBrush>
    <SolidColorBrush x:Key="blue">#369AFF</SolidColorBrush>

    <Style x:Key="closeAppButton"
           TargetType="Button">

        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="Foreground"
                Value="{DynamicResource light}" />

        <Setter Property="BorderThickness"
                Value="0" />

        <Setter Property="HorizontalAlignment"
                Value="Right" />

        <Setter Property="FontSize"
                Value="13" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="Button">

                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          Margin="0 -4.2 0 0" />
                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter Property="Background"
                        Value="{DynamicResource red}" />

            </Trigger>

        </Style.Triggers>

    </Style>

    <Style x:Key="saveButton"
           TargetType="Button">

        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="Foreground"
                Value="{DynamicResource blue}" />

        <Setter Property="BorderThickness"
                Value="0" />

        <Setter Property="HorizontalAlignment"
                Value="Left" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="Button">

                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          Margin="0 -2 0 0" />
                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter Property="Background"
                        Value="{DynamicResource semisemidark}" />

            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">

                <Setter Property="Foreground"
                        Value="{DynamicResource greenLight}" />

            </Trigger>

        </Style.Triggers>

    </Style>

    <Style x:Key="defaultButton"
           TargetType="Button">

        <Setter Property="Background"
                Value="{DynamicResource green}" />

        <Setter Property="Foreground"
                Value="{DynamicResource dark}" />

        <Setter Property="BorderThickness"
                Value="0" />

        <Setter Property="Padding"
                Value="10 5" />

        <Setter Property="HorizontalAlignment"
                Value="Left" />

        <Setter Property="VerticalAlignment"
                Value="Top" />

        <Setter Property="FontSize"
                Value="15" />

        <Setter Property="FontWeight"
                Value="SemiBold" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="Button">

                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="5">

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}" />
                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter Property="Background"
                        Value="{DynamicResource greenLight}" />

            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">

                <Setter Property="Background"
                        Value="{DynamicResource greenDark}" />

            </Trigger>

        </Style.Triggers>

    </Style>

    <Style x:Key="lightTextBlock"
           TargetType="TextBlock">

        <Setter Property="HorizontalAlignment"
                Value="Left" />

        <Setter Property="VerticalAlignment"
                Value="Top" />

        <Setter Property="FontSize"
                Value="15" />

        <Setter Property="Foreground"
                Value="{DynamicResource light}" />

    </Style>

    <Style TargetType="TextBox" x:Key="defaulTextBox">

        <Setter Property="HorizontalAlignment"
                Value="Stretch" />

        <Setter Property="VerticalAlignment"
                Value="Bottom" />

        <Setter Property="VerticalContentAlignment"
                Value="Center" />

        <Setter Property="HorizontalContentAlignment"
                Value="Center" />

        <Setter Property="Foreground"
                Value="{DynamicResource light}" />

        <Setter Property="FontSize"
                Value="15" />

        <Setter Property="Background"
                Value="{DynamicResource semidark}" />

        <Setter Property="BorderBrush"
                Value="{DynamicResource light}" />

        <Setter Property="BorderThickness"
                Value="0.5" />

        <Setter Property="Padding"
                Value="1 2" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="3">
                        <ScrollViewer Margin="0"
                                      x:Name="PART_ContentHost"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsEnabled"
                     Value="False">

                <Setter Property="Background"
                        Value="{DynamicResource dark}" />

                <Setter Property="BorderBrush"
                        Value="{DynamicResource semisemidark}" />

            </Trigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>